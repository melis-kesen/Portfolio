{"ast":null,"code":"var _jsxFileName = \"/Users/meliskesen/Desktop/Projects/Portfolio/Frontend/src/containers/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport About from \"./about/About\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\n//import {splashScreen} from \"../portfolio\";\n//import {StyleProvider} from \"../contexts/StyleContext\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] = useState(true);\n  useEffect(() => {}, []);\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDark ? \"dark-mode\" : null,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"rghpsch+4V7lC+t/3k8DiNFjDyw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Header","About","SplashScreen","useLocalStorage","jsxDEV","_jsxDEV","Main","_s","darkPref","window","matchMedia","isDark","setIsDark","matches","isShowingSplashAnimation","setIsShowingSplashAnimation","changeTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/meliskesen/Desktop/Projects/Portfolio/Frontend/src/containers/Main.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Header from \"../components/header/Header\";\nimport About from \"./about/About\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\n//import {splashScreen} from \"../portfolio\";\n//import {StyleProvider} from \"../contexts/StyleContext\";\nimport {useLocalStorage} from \"../hooks/useLocalStorage\";\n\nimport \"./Main.scss\";\n\nconst Main = () => {\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] =\n    useState(true);\n\n  useEffect(() => {\n\n  }, []);\n\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <div className={isDark ? \"dark-mode\" : null}>\n      \n   \n            <Header />\n            <About />\n         \n     \n    \n    </div>\n  );\n};\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,YAAY,MAAM,6BAA6B;AACtD;AACA;AACA,SAAQC,eAAe,QAAO,0BAA0B;AAExD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,eAAe,CAAC,QAAQ,EAAEK,QAAQ,CAACK,OAAO,CAAC;EACvE,MAAM,CAACC,wBAAwB,EAAEC,2BAA2B,CAAC,GAC3DhB,QAAQ,CAAC,IAAI,CAAC;EAEhBD,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxBJ,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEN,OAAA;IAAKY,SAAS,EAAEN,MAAM,GAAG,WAAW,GAAG,IAAK;IAAAO,QAAA,gBAGpCb,OAAA,CAACL,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjB,OAAA,CAACJ,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIZ,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBID,IAAI;EAAA,QAEoBH,eAAe;AAAA;AAAAoB,EAAA,GAFvCjB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}