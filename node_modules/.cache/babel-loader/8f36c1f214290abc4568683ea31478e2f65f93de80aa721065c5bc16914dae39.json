{"ast":null,"code":"var _jsxFileName = \"/Users/meliskesen/Desktop/Projects/Portfolio/Frontend/src/containers/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport About from \"./about/About\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\n//import {splashScreen} from \"../portfolio\";\nimport { StyleProvider } from \"../contexts/StyleContext\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] = useState(true);\n  useEffect(() => {\n    /*if (splashScreen.enabled) {\n      const splashTimer = setTimeout(\n        () => setIsShowingSplashAnimation(false),\n        splashScreen.duration\n      );\n      return () => {\n        clearTimeout(splashTimer);\n      };\n    }*/\n  }, []);\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDark ? \"dark-mode\" : null,\n    children: /*#__PURE__*/_jsxDEV(StyleProvider, {\n      value: {\n        isDark: isDark,\n        changeTheme: changeTheme\n      },\n      children: isShowingSplashAnimation ? /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"rghpsch+4V7lC+t/3k8DiNFjDyw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Header","About","SplashScreen","StyleProvider","useLocalStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","darkPref","window","matchMedia","isDark","setIsDark","matches","isShowingSplashAnimation","setIsShowingSplashAnimation","changeTheme","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/meliskesen/Desktop/Projects/Portfolio/Frontend/src/containers/Main.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Header from \"../components/header/Header\";\nimport About from \"./about/About\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\n//import {splashScreen} from \"../portfolio\";\nimport {StyleProvider} from \"../contexts/StyleContext\";\nimport {useLocalStorage} from \"../hooks/useLocalStorage\";\n\nimport \"./Main.scss\";\n\nconst Main = () => {\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] =\n    useState(true);\n\n  useEffect(() => {\n    /*if (splashScreen.enabled) {\n      const splashTimer = setTimeout(\n        () => setIsShowingSplashAnimation(false),\n        splashScreen.duration\n      );\n      return () => {\n        clearTimeout(splashTimer);\n      };\n    }*/\n  }, []);\n\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <div className={isDark ? \"dark-mode\" : null}>\n      <StyleProvider value={{isDark: isDark, changeTheme: changeTheme}}>\n        {isShowingSplashAnimation  ?(\n          <SplashScreen />\n        ) : (\n          <>\n            <Header />\n            <About />\n          </>\n        )}\n      </StyleProvider>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,YAAY,MAAM,6BAA6B;AACtD;AACA,SAAQC,aAAa,QAAO,0BAA0B;AACtD,SAAQC,eAAe,QAAO,0BAA0B;AAExD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,eAAe,CAAC,QAAQ,EAAEO,QAAQ,CAACK,OAAO,CAAC;EACvE,MAAM,CAACC,wBAAwB,EAAEC,2BAA2B,CAAC,GAC3DnB,QAAQ,CAAC,IAAI,CAAC;EAEhBD,SAAS,CAAC,MAAM;IACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARI,CASD,EAAE,EAAE,CAAC;EAEN,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxBJ,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAEN,MAAM,GAAG,WAAW,GAAG,IAAK;IAAAO,QAAA,eAC1Cf,OAAA,CAACH,aAAa;MAACmB,KAAK,EAAE;QAACR,MAAM,EAAEA,MAAM;QAAEK,WAAW,EAAEA;MAAW,CAAE;MAAAE,QAAA,EAC9DJ,wBAAwB,gBACvBX,OAAA,CAACJ,YAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEhBpB,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACEf,OAAA,CAACN,MAAM;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVpB,OAAA,CAACL,KAAK;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACT;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCID,IAAI;EAAA,QAEoBL,eAAe;AAAA;AAAAuB,EAAA,GAFvClB,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}